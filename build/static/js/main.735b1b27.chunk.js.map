{"version":3,"sources":["components/Notification.js","reducers/notificationReducer.js","components/Logout.js","components/Navigation.js","hooks/index.js","services/blogs.js","reducers/blogsReducer.js","components/BlogAddForm.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","services/usersList.js","components/SignUp.js","components/Togglable.js","components/Blog.js","components/Blogs.js","components/CommentForm.js","components/BlogPost.js","components/User.js","reducers/usersReducer.js","components/UsersList.js","components/UserInfo.js","App.js","store.js","index.js"],"names":["connect","state","notification","hidden","style","border","padding","borderWidth","setNotification","message","time","dispatch","type","data","setTimeout","notificationReducer","action","mapDispatchToProps","user","data-cy","onClick","event","a","async","preventDefault","window","localStorage","removeItem","document","location","href","exception","to","username","useField","useState","value","setValue","onChange","target","reset","baseUrl","token","axios","get","response","newToken","newBlog","config","headers","Authorization","request","post","then","id","delete","newComment","blog","put","initializeBlogs","blogsService","blogs","blogsReducer","filter","blogId","blogToChange","find","changedBlog","comments","concat","map","updatedBlog","likes","createBlog","props","resetTitle","title","resetAuthor","author","resetUrl","url","useEffect","blogService","onSubmit","blogObject","catch","error","console","log","credentials","userReducer","login","email","password","loginService","resetEmail","resetPass","userCreds","JSON","parse","responseText","name","resetName","usersService","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","dataCy","buttonLabel","children","addLike","deleteBlog","margin","className","confirm","finally","key","comment","resetComment","data-testid","content","ownProps","User","userData","length","getUsersList","userService","users","usersReducer","userId","userBlogs","setUserFromLocalStorage","blogFormRef","createRef","signUpRef","setItem","stringify","loggedUserJSON","getItem","loggedUser","path","render","exact","match","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById","subscribe"],"mappings":"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","file":"static/js/main.735b1b27.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Notification = ({ notification }) => {\r\n\tconst style = {\r\n\t\tborder: 'solid',\r\n\t\tpadding: 10,\r\n\t\tborderWidth: 1\r\n\t}\r\n\treturn (\r\n\t\t<div hidden={!notification} style={style}>\r\n\t\t\t{notification}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tnotification: state.notification\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps\r\n)(Notification)\r\n","\r\nconst notificationReducer = (state = '', action) => {\r\n\tswitch (action.type) {\r\n\tcase 'SET_NOTIFICATION':\r\n\t\tstate = action.data\r\n\t\treturn state\r\n\tcase 'RESET':\r\n\t\treturn action.data\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setNotification = (message, time) => {\r\n\treturn dispatch => {\r\n\t\tdispatch ({\r\n\t\t\ttype: 'SET_NOTIFICATION',\r\n\t\t\tdata: message\r\n\t\t})\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch ({\r\n\t\t\t\ttype: 'SET_NOTIFICATION',\r\n\t\t\t\tdata: null\r\n\t\t\t})\r\n\t\t}, time * 1000)\r\n\t}\r\n}\r\n\r\nexport default notificationReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst Logout = ({ setNotification }) => {\r\n\r\n\tconst handleLogout = async event => {\r\n\t\tevent.preventDefault()\r\n\t\ttry {\r\n\t\t\twindow.localStorage.removeItem('loggedUserJSON')\r\n\t\t\tdocument.location.href='/'\r\n\t\t\tsetNotification('Successfully logged out.', 3)\r\n\t\t} catch (exception) {\r\n\t\t\tsetNotification(exception.message, 3)\r\n\t\t}\r\n\t}\r\n\r\n\treturn <button\r\n\t\ttype=\"button\"\r\n\t\tdata-cy=\"logoutBtn\"\r\n\t\tonClick={handleLogout}>\r\n\t\tLogout\r\n\t</button>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Logout)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport Logout from './Logout'\r\n\r\nconst Navigation = ({ user }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to=\"/\">home</Link>\r\n\t\t\t<Link to=\"/users\">users</Link>\r\n\t\t\t<Link to=\"/blogs\">blogs</Link>\r\n\t\t\t{user.username} logged in\r\n\t\t\t<Logout />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Navigation)\r\n","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n\tconst [value, setValue] = useState('')\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t}\r\n\r\n\tconst reset = () => {\r\n\t\tsetValue('')\r\n\t}\r\n\r\n\treturn {\r\n\t\ttype,\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\treset\r\n\t}\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\n/**\r\n * Set user auth token\r\n * @param {string} newToken Current user auth token\r\n */\r\n\r\nconst setToken = newToken => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\n// const removeToken = () => console.log('Removing from localStorage')\r\n\r\n/**\r\n * Get all blogs\r\n */\r\nconst getAll = async () => {\r\n\tconst response = await axios.get(baseUrl)\r\n\treturn response.data\r\n}\r\n\r\n/**\r\n * Create new blog post\r\n * @param {Object} newBlog New blog post data\r\n */\r\nconst create = async newBlog => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\t// const response = await axios.post(baseUrl, newBlog, config)\r\n\t// return response\r\n\tconst request = axios.post(baseUrl, newBlog, config)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Comment on a blog post\r\n * @param {string} id Blog ID\r\n * @param {Object} newComment Comment content\r\n */\r\n\r\nconst comment = async (id, newComment) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst response = await axios.post(`${baseUrl}/${id}/comments`, newComment, config)\r\n\treturn response.data\r\n}\r\n\r\n/**\r\n * Update blog\r\n * @param {string} id Id of the blog\r\n * @param {Object} updatedBlog Updated blog data\r\n */\r\n\r\nconst update = async (id, updatedBlog) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, updatedBlog)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Add like to the blog\r\n * @param {Object} blog To increase likes\r\n */\r\nconst like = async blog => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst request = axios.put(`${baseUrl}/${blog.id}`, blog, config)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Delete blog post\r\n * @param {string} id Blog post ID\r\n */\r\n\r\nconst deleteBlog = async id => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst request = axios.delete(`${baseUrl}/${id}`, config)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, setToken, create, update, deleteBlog, comment, like }\r\n","import blogsService from '../services/blogs'\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\tcase 'CREATE_BLOG':\r\n\t\treturn [...state, action.data]\r\n\tcase 'DELETE_BLOG':\r\n\t\treturn state.filter(blog => blog.id !== action.data)\r\n\tcase 'INIT_BLOGS':\r\n\t\treturn action.data\r\n\tcase 'COMMENT': {\r\n\t\tconst blogId = action.data.blog // ??\r\n\t\tconst blogToChange = state.find(blog => blog.id === blogId)\r\n\t\tconst changedBlog = {\r\n\t\t\t...blogToChange,\r\n\t\t\tcomments: blogToChange.comments.concat(action.data)\r\n\t\t}\r\n\t\treturn state.map(blog =>\r\n\t\t\tblog.id !== blogId ? blog : changedBlog\r\n\t\t)\r\n\t}\r\n\tcase 'ADD_LIKE': {\r\n\t\tconst updatedBlog = action.data\r\n\t\tupdatedBlog.likes++\r\n\t\treturn state.map(blog =>\r\n\t\t\tblog.id !== action.data.id ? blog : updatedBlog\r\n\t\t)\r\n\t}\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const createBlog = blog => {\r\n\treturn async dispatch => {\r\n\t\tconst newBlog = await blogsService.create(blog)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'CREATE_BLOG',\r\n\t\t\tdata: newBlog\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const deleteBlog = id => {\r\n\treturn async dispatch => {\r\n\t\tawait blogsService.deleteBlog(id)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'DELETE_BLOG',\r\n\t\t\tdata: id\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Increase blog likes count\r\n * @param {Object} blog Blog to alter\r\n */\r\n\r\nexport const addLike = (blog) => {\r\n\tconsole.log('Blog sent in reducer: ', blog)\r\n\treturn async dispatch => {\r\n\t\tconst updatedBlog = await blogsService.like(blog)\r\n\t\tconsole.log('Updated blog: ', updatedBlog)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'ADD_LIKE',\r\n\t\t\tdata: updatedBlog\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Add comment to the blog\r\n * @param {string} blogId\r\n */\r\n\r\nexport const comment = ({ blogId, ...data }) => {\r\n\treturn async dispatch => {\r\n\t\tconst newComment = await blogsService.comment(blogId, data)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'COMMENT',\r\n\t\t\tdata: newComment\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Initialise blogs\r\n */\r\nexport const initializeBlogs = () => {\r\n\treturn async dispatch => {\r\n\t\tconst blogs = await blogsService.getAll()\r\n\t\tdispatch ({\r\n\t\t\ttype: 'INIT_BLOGS',\r\n\t\t\tdata: blogs\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default blogsReducer\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { createBlog } from '../reducers/blogsReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport blogService from '../services/blogs'\r\n\r\nconst BlogAddForm = (props) => {\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { reset: resetTitle, ...title } = useField('text')\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { reset: resetAuthor, ...author } = useField('text')\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { reset: resetUrl, ...url } = useField('text')\r\n\r\n\tuseEffect(() => {\r\n\t\tblogService.setToken(props.user.token)\r\n\t}, [props.user])\r\n\r\n\tconst addBlog = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst blogObject = {\r\n\t\t\ttitle: title.value,\r\n\t\t\tauthor: author.value,\r\n\t\t\turl: url.value,\r\n\t\t\tlikes: 0\r\n\t\t}\r\n\r\n\t\tprops.createBlog(blogObject)\r\n\t\t\t.then(() => {\r\n\t\t\t\tprops.setNotification('Blog added', 5)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\t// const notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\tprops.setNotification(error.message, 5)\r\n\t\t\t})\r\n\t\tresetTitle('')\r\n\t\tresetAuthor('')\r\n\t\tresetUrl('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Blog add form</h2>\r\n\t\t\t<form onSubmit={addBlog}>\r\n\t\t\t\t<label>Title</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tdata-cy=\"newTitle\"\r\n\t\t\t\t\t{...title}\r\n\t\t\t\t/><br />\r\n\t\t\t\t<label>Author</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tdata-cy=\"newAuthor\"\r\n\t\t\t\t\t{...author}\r\n\t\t\t\t/><br />\r\n\t\t\t\t<label>Url</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tdata-cy=\"newUrl\"\r\n\t\t\t\t\t{...url}\r\n\t\t\t\t/><br />\r\n\t\t\t\t<button data-cy=\"createBlog\" type=\"submit\">create</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcreateBlog,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(BlogAddForm)\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from '../services/login'\r\n\r\nconst userReducer = (state = null, action) => {\r\n\tswitch (action.type) {\r\n\tcase 'LOGIN':\r\n\t\treturn action.user\r\n\tcase 'SET_USER_FROM_LS':\r\n\t\treturn action.user\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const login = ({ email, password }) => {\r\n\treturn async dispatch => {\r\n\t\tconst user = await loginService.login({\r\n\t\t\temail,\r\n\t\t\tpassword\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOGIN',\r\n\t\t\tuser\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const setUserFromLocalStorage = user => {\r\n\treturn async dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_USER_FROM_LS',\r\n\t\t\tuser\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default userReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { login } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst LoginForm = (props) => {\r\n\tconst { reset : resetEmail, ...email } = useField('email')\r\n\tconst { reset : resetPass, ...password } = useField('password')\r\n\r\n\tconst handleLogin = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst userCreds = {\r\n\t\t\temail: email.value,\r\n\t\t\tpassword : password.value\r\n\t\t}\r\n\t\tprops.login(userCreds)\r\n\t\t\t.then(() => {\r\n\t\t\t\tprops.setNotification('Logged in successfully', 5)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t})\r\n\t\t\tresetEmail('')\r\n\t\t\tresetPass('')\r\n\t}\r\n\r\n\treturn <form data-cy=\"loginForm\" onSubmit={handleLogin}>\r\n\t\t<h4>Login into application</h4>\r\n\t\t<div>\r\n\t\t\temail\r\n\t\t\t<input\r\n\t\t\t\t{...email}\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\tdata-cy=\"emailInput\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tpassword\r\n\t\t\t<input\r\n\t\t\t\t{...password}\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\tdata-cy=\"passwordInput\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<button type=\"submit\" data-cy=\"login\">login</button>\r\n\t</form>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tlogin,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(LoginForm)\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getUsersList = async () => {\r\n\tconst response = await axios.get(baseUrl)\r\n\treturn response.data\r\n}\r\n\r\nconst signUp = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { getUsersList, signUp }\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport usersService from '../services/usersList' // users!\r\n\r\nconst SignUp = (props) => {\r\n\tconst { reset : resetName, ...username } = useField('text')\r\n\tconst { reset : resetEmail, ...email } = useField('email')\r\n\tconst { reset : resetPass, ...password } = useField('password')\r\n\r\n\tconst handleSignUp = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst userCreds = {\r\n\t\t\temail: email.value,\r\n\t\t\tusername: username.value,\r\n\t\t\tpassword : password.value\r\n\t\t}\r\n\t\tusersService.signUp(userCreds)\r\n\t\t\t.then(() => {\r\n\t\t\t\tprops.setNotification('Signup successful', 5)\r\n\t\t\t\tresetName('')\r\n\t\t\t\tresetEmail('')\r\n\t\t\t\tresetPass('')\r\n\t\t\t\tdocument.location.href='/'\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn <form data-cy=\"signUpForm\" onSubmit={handleSignUp}>\r\n\t\t<h4>New user sign up</h4>\r\n\t\t<div>\r\n\t\t\temail\r\n\t\t\t<input\r\n\t\t\t\t{...email}\r\n\t\t\t\tname=\"email\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tusername\r\n\t\t\t<input\r\n\t\t\t\t{...username}\r\n\t\t\t\tname=\"name\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tpassword\r\n\t\t\t<input\r\n\t\t\t\t{...password}\r\n\t\t\t\tname=\"password\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<button type=\"submit\" data-cy=\"signup\">sign up</button>\r\n\t</form>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SignUp)\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// eslint-disable-next-line\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\tconst [visible, setVisible] = useState(false)\r\n\r\n\tconst hideWhenVisible = { display: visible ? 'none' : '' }\r\n\tconst showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n\tconst toggleVisibility = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\treturn {\r\n\t\t\ttoggleVisibility\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={hideWhenVisible}>\r\n\t\t\t\t<button data-cy={props.dataCy} onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n\t\t\t</div>\r\n\t\t\t<div style={showWhenVisible}>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<button onClick={toggleVisibility}>cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nTogglable.propTypes = {\r\n\tbuttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { addLike, deleteBlog } from '../reducers/blogsReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport blogService from '../services/blogs'\r\n\r\nconst Blog = ({ blog, ...props }) => {\r\n\tconst blogStyle = { // ??\r\n\t\tborder: 'solid',\r\n\t\tborderWidth: 1,\r\n\t\tpadding: 5,\r\n\t\tmargin: 5\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tblogService.setToken(props.user.token)\r\n\t}, [props.user])\r\n\r\n\t// const [visible, setVisible] = useState(false)\r\n\t// const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n\t/**\r\n\t* Handle blog delete\r\n\t* @param {string} id Blog ID\r\n\t*/\r\n\r\n\tconst handleDelete = (id) => {\r\n\t\tif (window.confirm(`Do you really want to delete blog with id of: ${id}?`)) {\r\n\t\t\tprops.deleteBlog(id)\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t\t})\r\n\t\t\t\t.finally(props.setNotification('Blog successfully deleted', 5))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={blogStyle}>\r\n\t\t\t<div>\r\n\t\t\t\t<Link to={`/blogs/${blog.id}`}>\r\n\t\t\t\t\t{blog.title}\r\n\t\t\t\t</Link>\r\n\t\t\t\t{blog.author}\r\n\t\t\t\t<div className=\"more-info\">\r\n\t\t\t\t\t{blog.url}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{blog.likes} likes\r\n\t\t\t\t\t<button type=\"button\" onClick={() => props.addLike(blog)}>\r\n\t\t\t\t\t\tlike\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t\tadded by {blog.author}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t\tAuthor id is: {blog.user.username} <br />\r\n\t\t\t\t\t\tCurrent user id is: { props.user.username} <br />\r\n\t\t\t\t\t{props.user.id === blog.user.id &&\r\n\t\t\t\t\t\t<button type=\"button\" onClick={() => handleDelete(blog.id)}>\r\n\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)}\r\n\r\nBlog.propTypes = {\r\n\tblog: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\taddLike,\r\n\tdeleteBlog,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Blog)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Blog from './Blog'\r\nimport { initializeBlogs } from '../reducers/blogsReducer'\r\n\r\nconst Blogs = ( { blogs, ...props }) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.initializeBlogs()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Blogs</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t{blogs.map(blog =>\r\n\t\t\t\t\t<Blog\r\n\t\t\t\t\t\tkey={blog.id}\r\n\t\t\t\t\t\tblog={blog}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tblogs: state.blogs\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tinitializeBlogs\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Blogs)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { comment } from '../reducers/blogsReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst CommentForm = (props) => {\r\n\tconst { reset : resetComment, ...comment } = useField('text')\r\n\r\n\tconst handleComment = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst newComment = {\r\n\t\t\tblogId: props.blogId,\r\n\t\t\tcontent: comment.value,\r\n\t\t}\r\n\t\tprops.comment(newComment)\r\n\t\t\t.then(() => props.setNotification('Comment added', 5))\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t})\r\n\t\tresetComment('')\r\n\t}\r\n\r\n\treturn <form data-testid=\"comment-form\" onSubmit={handleComment}>\r\n\t\t<div>\r\n\t\t\tYour comment:\r\n\t\t\t<input\r\n\t\t\t\t{...comment}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<button type=\"submit\">Comment</button>\r\n\t</form>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcomment,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(CommentForm)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { initializeBlogs } from '../reducers/blogsReducer'\r\nimport CommentForm from './CommentForm'\r\n\r\n/**\r\n * Single blog post view\r\n */\r\n\r\nconst BlogPost = ({ blog, ...props }) => {\r\n\tif (!blog) {\r\n\t\tprops.initializeBlogs()\r\n\t\treturn (\r\n\t\t\t<>just a sec..</>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h2>Single blog!</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{blog.title} - <strong>{blog.author}</strong>\r\n\t\t\t\t</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<CommentForm blogId={blog.id} />\r\n\t\t\t\t\t<h3>Comments</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{blog.comments.map(comment =>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={comment.id}>\r\n\t\t\t\t\t\t\t\t{comment.content}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)}\r\n}\r\n\r\nconst blogToShow = (id, blogs) => blogs.find(blog => blog.id === id)\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tblogs: state.blogs,\r\n\t\tblog: blogToShow(ownProps.blogId, state.blogs)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tinitializeBlogs\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(BlogPost)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = ({ userData }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span>\r\n\t\t\t\t<Link to={`/users/${userData.id}`}>\r\n\t\t\t\t\t{ userData.username }\r\n\t\t\t\t</Link>&nbsp;\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t{userData.blogs.length}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default User\r\n","import userService from '../services/usersList'\r\n\r\nconst usersReducer = (state = null, action) => {\r\n\tswitch (action.type) {\r\n\tcase 'GET_USERS_LIST':\r\n\t\treturn action.data\r\n\tcase 'GET_USER_BY_ID':\r\n\t\treturn action.data\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const getUsersList = () => {\r\n\treturn async dispatch => {\r\n\t\tconst users = await userService.getUsersList()\r\n\t\tdispatch ({\r\n\t\t\ttype: 'GET_USERS_LIST',\r\n\t\t\tdata: users\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default usersReducer\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport User from './User'\r\nimport { getUsersList } from '../reducers/usersReducer'\r\n\r\nconst UsersList = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.getUsersList()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tif (props.users) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Users</h3>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{props.users.map(user =>\r\n\t\t\t\t\t\t<User\r\n\t\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\t\tuserData={user}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else return (\r\n\t\t<h4>just a sec..</h4>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.users\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetUsersList\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(UsersList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getUsersList } from '../reducers/usersReducer'\r\n\r\nconst UserInfo = ({ userId, ...props }) => {\r\n\tif (props.users) {\r\n\t\tconst userById = (id) =>\r\n\t\t\tprops.users.find(user => user.id === id)\r\n\t\tconst userBlogs = userById(userId).blogs\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p>user info {userId} </p>\r\n\t\t\t\t{userBlogs.map(blog =>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={blog.id}\r\n\t\t\t\t\t>{blog.title}</div>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t)\r\n\t} else {\r\n\t\tprops.getUsersList()\r\n\t\treturn (\r\n\t\t\t<h4>just a sec..</h4>\r\n\t\t)}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.users\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetUsersList\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(UserInfo)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Notification from './components/Notification'\r\nimport Navigation from './components/Navigation'\r\nimport BlogAddForm from './components/BlogAddForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport SignUp from './components/SignUp'\r\nimport Togglable from './components/Togglable'\r\nimport Blogs from './components/Blogs'\r\nimport BlogPost from './components/BlogPost'\r\nimport UsersList from './components/UsersList'\r\nimport UserInfo from './components/UserInfo'\r\nimport { setUserFromLocalStorage } from './reducers/userReducer'\r\nimport './css/index.css'\r\n\r\nconst App = (props) => {\r\n\tconst blogFormRef = React.createRef()\r\n\tconst signUpRef = React.createRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!props.user) {\r\n\t\t\tconst loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\r\n\t\t\tif (loggedUserJSON) {\r\n\t\t\t\tconst loggedUser = JSON.parse(loggedUserJSON)\r\n\t\t\t\tprops.setUserFromLocalStorage(loggedUser)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('No user.')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t'loggedUserJSON', JSON.stringify(props.user)\r\n\t\t\t)\r\n\t\t}\r\n\t}, [props, props.user, props.setUserFromLocalStorage])\r\n\r\n\treturn (\r\n\t\t<div data-testid=\"main\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Notification />\r\n\t\t\t\t<h1>Blogs app.</h1>\r\n\t\t\t\t{props.user ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Navigation />\r\n\t\t\t\t\t\t<Route path=\"/login\" render={() => <LoginForm />} />\r\n\t\t\t\t\t\t<Route exact path=\"/\" render={() =>\r\n\t\t\t\t\t\t\t<Togglable buttonLabel=\"new blog\" dataCy=\"addBlogFormToggle\" ref={blogFormRef}>\r\n\t\t\t\t\t\t\t\t<BlogAddForm />\r\n\t\t\t\t\t\t\t</Togglable>} />\r\n\t\t\t\t\t\t<Route exact path=\"/users\" render={() => <UsersList />} />\r\n\t\t\t\t\t\t<Route exact path=\"/users/:id\" render={({ match }) =>\r\n\t\t\t\t\t\t\t<UserInfo userId={match.params.id} />\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t<Route exact path=\"/blogs\" render={() => <Blogs />} />\r\n\t\t\t\t\t\t<Route exact path=\"/blogs/:id\" render={({ match }) =>\r\n\t\t\t\t\t\t\t<BlogPost blogId={match.params.id} />\r\n\t\t\t\t\t\t} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) :\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<LoginForm />\r\n\t\t\t\t\t\t\t<Togglable buttonLabel=\"sign up\" dataCy=\"signUp\" ref={signUpRef}>\r\n\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t</Togglable>\r\n\t\t\t\t\t</>}\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetUserFromLocalStorage\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App)\r\n","\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n\tuser: userReducer,\r\n\tusers: usersReducer,\r\n\tblogs: blogsReducer,\r\n\tnotification: notificationReducer\r\n})\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tcomposeWithDevTools(\r\n\t\tapplyMiddleware(thunk)\r\n\t)\r\n)\r\n\r\nexport default store","\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nconst render = () => {\r\n\tReactDOM.render(\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>,\r\n\t\tdocument.getElementById('root')\r\n\t)\r\n}\r\n\r\nrender()\r\nstore.subscribe(render)\r\n"],"sourceRoot":""}