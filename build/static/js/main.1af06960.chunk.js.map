{"version":3,"sources":["components/Notification.js","reducers/notificationReducer.js","components/Logout.js","components/NavigationBar.js","hooks/index.js","services/blogs.js","reducers/blogsReducer.js","components/BlogAddForm.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","services/usersList.js","components/SignUp.js","components/Togglable.js","components/Footer.js","components/Blog.js","components/Blogs.js","components/CommentForm.js","components/BlogPost.js","components/User.js","reducers/usersReducer.js","components/UsersList.js","components/UserInfo.js","App.js","store.js","index.js"],"names":["connect","state","notification","Alert","className","variant","setNotification","message","time","dispatch","type","data","setTimeout","notificationReducer","action","mapDispatchToProps","user","Button","onClick","event","a","async","preventDefault","window","localStorage","removeItem","document","location","href","exception","data-cy","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","to","Link","as","username","useField","useState","value","setValue","onChange","target","reset","baseUrl","token","axios","get","response","newToken","newBlog","config","headers","Authorization","post","request","delete","then","newComment","blog","put","initializeBlogs","blogsService","blogs","blogsReducer","filter","blogId","blogToChange","find","changedBlog","comments","concat","map","updatedBlog","likes","createBlog","props","resetTitle","title","resetAuthor","author","resetUrl","url","useEffect","blogService","Container","Form","onSubmit","blogObject","catch","error","JSON","parse","responseText","Group","Label","Control","credentials","userReducer","login","email","password","loginService","resetEmail","resetPass","userCreds","console","log","name","resetName","usersService","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","dataCy","buttonLabel","children","Footer","addLike","deleteBlog","Card","Body","Title","Subtitle","Text","confirm","finally","key","comment","resetComment","content","ownProps","User","userData","length","getUsersList","userService","users","usersReducer","ListGroup","Item","userId","userBlogs","setUserFromLocalStorage","blogFormRef","createRef","signUpRef","setItem","stringify","loggedUserJSON","getItem","loggedUser","role","path","render","exact","match","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById","subscribe"],"mappings":"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","file":"static/js/main.1af06960.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n/**\r\n * Set notification\r\n * @param {string} notification text\r\n */\r\n\r\nconst Notification = ({ notification }) => { // type?\r\n\tconst currentType = 'success'\r\n\treturn (\r\n\t\t<>\r\n\t\t{(notification &&\r\n\t\t\t<Alert className=\"my-3\" variant={currentType}>\r\n\t\t\t\t{notification}\r\n\t\t\t</Alert>\r\n\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tnotification: state.notification\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps\r\n)(Notification)\r\n","\r\nconst notificationReducer = (state = '', action) => {\r\n\tswitch (action.type) {\r\n\tcase 'SET_NOTIFICATION':\r\n\t\tstate = action.data\r\n\t\treturn state\r\n\tcase 'RESET':\r\n\t\treturn action.data\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setNotification = (message, time) => {\r\n\treturn dispatch => {\r\n\t\tdispatch ({\r\n\t\t\ttype: 'SET_NOTIFICATION',\r\n\t\t\tdata: message\r\n\t\t})\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch ({\r\n\t\t\t\ttype: 'SET_NOTIFICATION',\r\n\t\t\t\tdata: null\r\n\t\t\t})\r\n\t\t}, time * 1000)\r\n\t}\r\n}\r\n\r\nexport default notificationReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Logout = ({ setNotification }) => {\r\n\r\n\tconst handleLogout = async event => {\r\n\t\tevent.preventDefault()\r\n\t\ttry {\r\n\t\t\twindow.localStorage.removeItem('loggedUserJSON')\r\n\t\t\tdocument.location.href='/'\r\n\t\t\tsetNotification('Successfully logged out.', 3)\r\n\t\t} catch (exception) {\r\n\t\t\tsetNotification(exception.message, 3)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={handleLogout}\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-cy=\"logoutBtn\"\r\n\t\t\t\tvariant=\"outline-secondary\"\r\n\t\t\t\tclassName=\"mx-3\"\r\n\t\t\t>\r\n\t\t\t\tLogout\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Logout)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport Logout from './Logout'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n\r\nconst NavigationBar = ({ user }) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n\t\t\t\t<Navbar.Brand href=\"/\">Blog app</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"ml-auto pl-2 d-flex align-items-left\">\r\n\r\n\t\t\t\t\t\t\t<Link to=\"/users\" className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<Nav.Link href=\"#\" as=\"span\">\r\n\t\t\t\t\t\t\t\t\tUsers\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Link to=\"/blogs\" className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<Nav.Link href=\"#\" as=\"span\">\r\n\t\t\t\t\t\t\t\t\tBlogs\r\n\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Nav.Link className=\"d-flex justify-content-end\" href=\"#\" as=\"span\">\r\n\t\t\t\t\t\t\t{user\r\n\t\t\t\t\t\t\t\t? <>\r\n\t\t\t\t\t\t\t\t\t\t<em className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{user.username} logged in\r\n\t\t\t\t\t\t\t\t\t\t</em>\r\n\t\t\t\t\t\t\t\t\t\t<Logout />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t: <Link to=\"/login\">login</Link>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Nav.Link>\r\n\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(NavigationBar)\r\n","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n\tconst [value, setValue] = useState('')\r\n\r\n\tconst onChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t}\r\n\r\n\tconst reset = () => {\r\n\t\tsetValue('')\r\n\t}\r\n\r\n\treturn {\r\n\t\ttype,\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\treset\r\n\t}\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\n/**\r\n * Set user auth token\r\n * @param {string} newToken Current user auth token\r\n */\r\n\r\nconst setToken = newToken => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\n/**\r\n * Get all blogs\r\n */\r\nconst getAll = async () => {\r\n\tconst response = await axios.get(baseUrl)\r\n\treturn response.data\r\n}\r\n\r\n/**\r\n * Create new blog post\r\n * @param {Object} newBlog New blog post data\r\n */\r\nconst create = async newBlog => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst response = await axios.post(baseUrl, newBlog, config)\r\n\treturn response.data\r\n}\r\n\r\n/**\r\n * Comment on a blog post\r\n * @param {string} id Blog ID\r\n * @param {Object} newComment Comment content\r\n */\r\n\r\nconst comment = async (id, newComment) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst response = await axios.post(`${baseUrl}/${id}/comments`, newComment, config)\r\n\treturn response.data\r\n}\r\n\r\n/**\r\n * Update blog\r\n * @param {string} id Id of the blog\r\n * @param {Object} updatedBlog Updated blog data\r\n */\r\n\r\nconst update = async (id, updatedBlog) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, updatedBlog)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Add like to the blog\r\n * @param {Object} blog To increase likes\r\n */\r\nconst like = async blog => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst request = axios.put(`${baseUrl}/${blog.id}`, blog, config)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/**\r\n * Delete blog post\r\n * @param {string} id Blog post ID\r\n */\r\n\r\nconst deleteBlog = async id => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token }\r\n\t}\r\n\tconst request = axios.delete(`${baseUrl}/${id}`, config)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, setToken, create, update, deleteBlog, comment, like }\r\n","import blogsService from '../services/blogs'\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n\tswitch (action.type) {\r\n\tcase 'CREATE_BLOG':\r\n\t\treturn [...state, action.data]\r\n\tcase 'DELETE_BLOG':\r\n\t\treturn state.filter(blog => blog.id !== action.data)\r\n\tcase 'INIT_BLOGS':\r\n\t\treturn action.data\r\n\tcase 'COMMENT': {\r\n\t\tconst blogId = action.data.blog // ??\r\n\t\tconst blogToChange = state.find(blog => blog.id === blogId)\r\n\t\tconst changedBlog = {\r\n\t\t\t...blogToChange,\r\n\t\t\tcomments: blogToChange.comments.concat(action.data)\r\n\t\t}\r\n\t\treturn state.map(blog =>\r\n\t\t\tblog.id !== blogId ? blog : changedBlog\r\n\t\t)\r\n\t}\r\n\tcase 'ADD_LIKE': {\r\n\t\tconst updatedBlog = action.data\r\n\t\tupdatedBlog.likes++\r\n\t\treturn state.map(blog =>\r\n\t\t\tblog.id !== action.data.id ? blog : updatedBlog\r\n\t\t)\r\n\t}\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const createBlog = blog => {\r\n\treturn async dispatch => {\r\n\t\tconst newBlog = await blogsService.create(blog)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'CREATE_BLOG',\r\n\t\t\tdata: newBlog\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const deleteBlog = id => {\r\n\treturn async dispatch => {\r\n\t\tawait blogsService.deleteBlog(id)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'DELETE_BLOG',\r\n\t\t\tdata: id\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Increase blog likes count\r\n * @param {Object} blog Blog to alter\r\n */\r\n\r\nexport const addLike = (blog) => {\r\n\treturn async dispatch => {\r\n\t\tconst updatedBlog = await blogsService.like(blog)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'ADD_LIKE',\r\n\t\t\tdata: updatedBlog\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Add comment to the blog\r\n * @param {string} blogId\r\n */\r\n\r\nexport const comment = ({ blogId, ...data }) => {\r\n\treturn async dispatch => {\r\n\t\tconst newComment = await blogsService.comment(blogId, data)\r\n\t\tdispatch ({\r\n\t\t\ttype: 'COMMENT',\r\n\t\t\tdata: newComment\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Initialise blogs\r\n */\r\nexport const initializeBlogs = () => {\r\n\treturn async dispatch => {\r\n\t\tconst blogs = await blogsService.getAll()\r\n\t\tdispatch ({\r\n\t\t\ttype: 'INIT_BLOGS',\r\n\t\t\tdata: blogs\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default blogsReducer\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { createBlog } from '../reducers/blogsReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport blogService from '../services/blogs'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\n\r\nconst BlogAddForm = (props) => {\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { reset: resetTitle, ...title } = useField('text')\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { reset: resetAuthor, ...author } = useField('text')\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tconst { reset: resetUrl, ...url } = useField('text')\r\n\r\n\tuseEffect(() => {\r\n\t\tblogService.setToken(props.user.token)\r\n\t}, [props.user])\r\n\r\n\tconst addBlog = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst blogObject = {\r\n\t\t\ttitle: title.value,\r\n\t\t\tauthor: author.value,\r\n\t\t\turl: url.value,\r\n\t\t\tlikes: 0\r\n\t\t}\r\n\r\n\t\tprops.createBlog(blogObject)\r\n\t\t\t.then(() => {\r\n\t\t\t\tprops.setNotification('Blog added', 5)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tprops.setNotification(notification.error, 5) // this one!\r\n\t\t\t})\r\n\t\tresetTitle('')\r\n\t\tresetAuthor('')\r\n\t\tresetUrl('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h2>Blog add form</h2>\r\n\t\t\t<Form data-cy=\"addBlogForm\" onSubmit={addBlog}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tdata-cy=\"newTitle\"\r\n\t\t\t\t\t\t{...title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Label>Author</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tdata-cy=\"newAuthor\"\r\n\t\t\t\t\t\t{...author}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Label>Url</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tdata-cy=\"newUrl\"\r\n\t\t\t\t\t\t{...url}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"my-3\"\r\n\t\t\t\t\t\tdata-cy=\"createBlogBtn\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tcreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcreateBlog,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(BlogAddForm)\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from '../services/login'\r\n\r\nconst userReducer = (state = null, action) => {\r\n\tswitch (action.type) {\r\n\tcase 'LOGIN':\r\n\t\treturn action.user\r\n\tcase 'SET_USER_FROM_LS':\r\n\t\treturn action.user\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const login = ({ email, password }) => {\r\n\treturn async dispatch => {\r\n\t\tconst user = await loginService.login({\r\n\t\t\temail,\r\n\t\t\tpassword\r\n\t\t})\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOGIN',\r\n\t\t\tuser\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const setUserFromLocalStorage = user => {\r\n\treturn async dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'SET_USER_FROM_LS',\r\n\t\t\tuser\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default userReducer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { login } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst LoginForm = (props) => {\r\n\tconst { reset : resetEmail, ...email } = useField('email')\r\n\tconst { reset : resetPass, ...password } = useField('password')\r\n\r\n\tconst handleLogin = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst userCreds = {\r\n\t\t\temail: email.value,\r\n\t\t\tpassword : password.value\r\n\t\t}\r\n\t\tprops.login(userCreds)\r\n\t\t\t.then(() => {\r\n\t\t\t\tprops.setNotification('Logged in successfully', 5)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log('Error', error)\r\n\t\t\t\t// const notification = JSON.parse(error.request.responseText)\r\n\t\t\t\t// props.setNotification(notification.error, 5)\r\n\t\t\t})\r\n\t\t\tresetEmail('')\r\n\t\t\tresetPass('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>Login into application</h4>\r\n\t\t\t<Form data-cy=\"loginForm\" onSubmit={handleLogin}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>email</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tdata-cy=\"emailInput\"\r\n\t\t\t\t\t\t{...email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Label>password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tdata-cy=\"passwordInput\"\r\n\t\t\t\t\t\t{...password}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<Button className=\"my-3\" type=\"submit\" variant=\"primary\" data-cy=\"loginBtn\">login</Button>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tlogin,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(LoginForm)\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getUsersList = async () => {\r\n\tconst response = await axios.get(baseUrl)\r\n\treturn response.data\r\n}\r\n\r\nconst signUp = async (credentials) => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default { getUsersList, signUp }\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport usersService from '../services/usersList' // users!\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SignUp = (props) => {\r\n\tconst { reset : resetName, ...username } = useField('text')\r\n\tconst { reset : resetEmail, ...email } = useField('email')\r\n\tconst { reset : resetPass, ...password } = useField('password')\r\n\r\n\tconst handleSignUp = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst userCreds = {\r\n\t\t\temail: email.value,\r\n\t\t\tusername: username.value,\r\n\t\t\tpassword : password.value\r\n\t\t}\r\n\t\tusersService.signUp(userCreds)\r\n\t\t\t.then(() => {\r\n\t\t\t\tprops.setNotification('Signup successful', 5)\r\n\t\t\t\tresetName('')\r\n\t\t\t\tresetEmail('')\r\n\t\t\t\tresetPass('')\r\n\t\t\t\tdocument.location.href='/'\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h4>New user sign up</h4>\r\n\t\t\t<Form data-cy=\"signUpForm\" onSubmit={handleSignUp}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>email</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tdata-cy=\"inputRegEmail\"\r\n\t\t\t\t\t\t\t{...email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Label>username</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tdata-cy=\"inputUserName\"\r\n\t\t\t\t\t\t\t{...username}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Label>password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tdata-cy=\"inputRegPass\"\r\n\t\t\t\t\t\t\t{...password}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"my-3\"\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tdata-cy=\"signupBtn\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tsign up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(SignUp)\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\n// eslint-disable-next-line\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\tconst [visible, setVisible] = useState(false)\r\n\r\n\tconst hideWhenVisible = { display: visible ? 'none' : '' }\r\n\tconst showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n\tconst toggleVisibility = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\treturn {\r\n\t\t\ttoggleVisibility\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={hideWhenVisible} className=\"text-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"my-3\"\r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\tonClick={toggleVisibility}\r\n\t\t\t\t\tdata-cy={props.dataCy}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.buttonLabel}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<div style={showWhenVisible}>\r\n\t\t\t\t{props.children}\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={toggleVisibility}\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\tdata-cy=\"toggleBtn\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tclose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nTogglable.propTypes = {\r\n\tbuttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<span className=\"text-muted\">Place sticky footer content here.</span>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n/*\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(NavigationBar)\r\n*/\r\n\r\nexport default Footer\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { addLike, deleteBlog } from '../reducers/blogsReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport blogService from '../services/blogs'\r\nimport { Card, Button } from 'react-bootstrap'\r\n\r\nconst Blog = ({ blog, ...props }) => {\r\n\tuseEffect(() => {\r\n\t\tblogService.setToken(props.user.token)\r\n\t}, [props.user])\r\n\r\n\t// const [visible, setVisible] = useState(false)\r\n\t// const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n\t/**\r\n\t* Handle blog delete\r\n\t* @param {string} id Blog ID\r\n\t*/\r\n\r\n\tconst handleDelete = (id) => {\r\n\t\tif (window.confirm(`Do you really want to delete blog with id of: ${id}?`)) {\r\n\t\t\tprops.deleteBlog(id)\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t\t})\r\n\t\t\t\t.finally(props.setNotification('Blog successfully deleted', 5))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\r\n\t\t\t<Card.Body>\r\n\r\n\t\t\t\t<Card.Title>\r\n\t\t\t\t\t<Link to={`/blogs/${blog.id}`}>\r\n\t\t\t\t\t\t{blog.title}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Card.Title>\r\n\t\t\t\t<Card.Subtitle>\r\n\t\t\t\t\t{blog.author}\r\n\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t<Card.Text>\r\n\t\t\t\t\tadded by {blog.author}\r\n\t\t\t\t</Card.Text>\r\n\t\t\t\t\t{blog.url}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t{blog.likes} likes\r\n\t\t\t\t\t<Button className=\"ml-2\" type=\"button\" variant=\"primary\" onClick={() => props.addLike(blog)}>\r\n\t\t\t\t\t\tlike\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{props.user.id === blog.user.id &&\r\n\t\t\t\t\t\t<Button className=\"ml-2\" type=\"button\" variant=\"outline-secondary\" onClick={() => handleDelete(blog.id)}>\r\n\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t}\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t)}\r\n\r\nBlog.propTypes = {\r\n\tblog: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\taddLike,\r\n\tdeleteBlog,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Blog)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Blog from './Blog'\r\nimport { initializeBlogs } from '../reducers/blogsReducer'\r\n\r\nconst Blogs = ( { blogs, ...props }) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.initializeBlogs()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Blogs</h2>\r\n\t\t\t{blogs.map(blog =>\r\n\t\t\t\t<Blog\r\n\t\t\t\t\tkey={blog.id}\r\n\t\t\t\t\tblog={blog}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tblogs: state.blogs\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tinitializeBlogs\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Blogs)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useField } from '../hooks'\r\nimport { comment } from '../reducers/blogsReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst CommentForm = (props) => {\r\n\tconst { reset : resetComment, ...comment } = useField('text')\r\n\r\n\tconst handleComment = async event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst newComment = {\r\n\t\t\tblogId: props.blogId,\r\n\t\t\tcontent: comment.value,\r\n\t\t}\r\n\t\tprops.comment(newComment)\r\n\t\t\t.then(() => props.setNotification('Comment added', 5))\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconst notification = JSON.parse(error.request.responseText)\r\n\t\t\t\tprops.setNotification(notification.error, 5)\r\n\t\t\t})\r\n\t\tresetComment('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tdata-cy=\"commentForm\"\r\n\t\t\tonSubmit={handleComment}\r\n\t\t>\r\n\t\t<Form.Group>\r\n\t\t\t<Form.Label className=\"my-3\">Your comment</Form.Label>\r\n\t\t\t<Form.Control\r\n\t\t\t\tdata-cy=\"commentInput\"\r\n\t\t\t\t{...comment}\r\n\t\t\t/>\r\n\t\t\t<Button className=\"my-3\" variant=\"primary\" type=\"submit\">Comment</Button>\r\n\t\t</Form.Group>\r\n\t</Form>\r\n\t)\r\n\t}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tcomment,\r\n\tsetNotification\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(CommentForm)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { initializeBlogs } from '../reducers/blogsReducer'\r\nimport CommentForm from './CommentForm'\r\n\r\n/**\r\n * Single blog post view\r\n */\r\n\r\nconst BlogPost = ({ blog, ...props }) => {\r\n\tif (!blog) {\r\n\t\tprops.initializeBlogs()\r\n\t\treturn (\r\n\t\t\t<em className=\"text-muted\">just a sec..</em>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h2>{blog.title}</h2>\r\n\t\t\t\t\t<strong><em className=\"text-muted\">{blog.author}</em></strong>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<CommentForm blogId={blog.id} />\r\n\t\t\t\t\t<h3>Comments</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{blog.comments.map(comment =>\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={comment.id}>\r\n\t\t\t\t\t\t\t\t{comment.content}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)}\r\n}\r\n\r\nconst blogToShow = (id, blogs) => blogs.find(blog => blog.id === id)\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tblogs: state.blogs,\r\n\t\tblog: blogToShow(ownProps.blogId, state.blogs)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tinitializeBlogs\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(BlogPost)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = ({ userData }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span>\r\n\t\t\t\t<Link to={`/users/${userData.id}`}>\r\n\t\t\t\t\t{ userData.username }\r\n\t\t\t\t</Link>&nbsp;\r\n\t\t\t</span>\r\n\t\t\t<span>\r\n\t\t\t\t{userData.blogs.length}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default User\r\n","import userService from '../services/usersList'\r\n\r\nconst usersReducer = (state = null, action) => {\r\n\tswitch (action.type) {\r\n\tcase 'GET_USERS_LIST':\r\n\t\treturn action.data\r\n\tcase 'GET_USER_BY_ID':\r\n\t\treturn action.data\r\n\tdefault:\r\n\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const getUsersList = () => {\r\n\treturn async dispatch => {\r\n\t\tconst users = await userService.getUsersList()\r\n\t\tdispatch ({\r\n\t\t\ttype: 'GET_USERS_LIST',\r\n\t\t\tdata: users\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default usersReducer\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport User from './User'\r\nimport { getUsersList } from '../reducers/usersReducer'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst UsersList = (props) => {\r\n\tuseEffect(() => {\r\n\t\tprops.getUsersList()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tif (props.users) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h3>Users</h3>\r\n\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t{props.users.map(user =>\r\n\t\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<User\r\n\t\t\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\t\t\tuserData={user}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</>\r\n\t\t)\r\n\t} else return (\r\n\t\t<h4>just a sec..</h4>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.users\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetUsersList\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(UsersList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getUsersList } from '../reducers/usersReducer'\r\nimport { ListGroup } from 'react-bootstrap'\r\n\r\nconst UserInfo = ({ userId, user, ...props }) => {\r\n\tif (props.users) {\r\n\t\tconst userById = (id) =>\r\n\t\t\tprops.users.find(user => user.id === id)\r\n\t\tconst userBlogs = userById(userId).blogs\r\n\r\n\t\tconsole.log(props.user)\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h3>User info</h3>\r\n\t\t\t\t<div className=\"py-4\">\r\n\t\t\t\t\t<em><strong>{user.username}</strong></em>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"text-muted\">{user.email}</span>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"text-muted\">{user.id}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t{userBlogs.map(blog =>\r\n\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\tkey={blog.id}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h4 className=\"mb-0 d-inline\">{blog.title}</h4>\r\n\t\t\t\t\t\t\t<em> {blog.author}</em>\r\n\t\t\t\t\t\t\t<span className='text-muted'> {blog.url}</span>\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</>\r\n\t\t)\r\n\t} else {\r\n\t\tprops.getUsersList()\r\n\t\treturn (\r\n\t\t\t<h4>just a sec..</h4>\r\n\t\t)}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.users,\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetUsersList\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(UserInfo)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Notification from './components/Notification'\r\nimport NavigationBar from './components/NavigationBar'\r\nimport BlogAddForm from './components/BlogAddForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport SignUp from './components/SignUp'\r\nimport Togglable from './components/Togglable'\r\nimport Footer from './components/Footer'\r\nimport Blogs from './components/Blogs'\r\nimport BlogPost from './components/BlogPost'\r\nimport UsersList from './components/UsersList'\r\nimport UserInfo from './components/UserInfo'\r\nimport { setUserFromLocalStorage } from './reducers/userReducer'\r\nimport './css/index.css'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst App = (props) => {\r\n\tconst blogFormRef = React.createRef()\r\n\tconst signUpRef = React.createRef()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!props.user) {\r\n\t\t\tconst loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\r\n\t\t\tif (loggedUserJSON) {\r\n\t\t\t\tconst loggedUser = JSON.parse(loggedUserJSON)\r\n\t\t\t\tprops.setUserFromLocalStorage(loggedUser)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('No user.')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t'loggedUserJSON', JSON.stringify(props.user)\r\n\t\t\t)\r\n\t\t}\r\n\t}, [props, props.user, props.setUserFromLocalStorage])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Router>\r\n\t\t\t<NavigationBar />\r\n\t\t\t<Container role=\"main\" data-cy=\"mainContainer\">\r\n\t\t\t\t<Notification />\r\n\t\t\t\t{props.user\r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Route path=\"/login\" render={() => <LoginForm />} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/\" render={() =>\r\n\t\t\t\t\t\t\t\t<Togglable buttonLabel=\"new blog\" dataCy=\"addBlogFormToggle\" ref={blogFormRef}>\r\n\t\t\t\t\t\t\t\t\t<BlogAddForm />\r\n\t\t\t\t\t\t\t\t</Togglable>} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/users\" render={() => <UsersList />} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/users/:id\" render={({ match }) =>\r\n\t\t\t\t\t\t\t\t<UserInfo userId={match.params.id} />\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/blogs\" render={() => <Blogs />} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/blogs/:id\" render={({ match }) =>\r\n\t\t\t\t\t\t\t\t<BlogPost blogId={match.params.id} />\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) :\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<LoginForm />\r\n\t\t\t\t\t\t\t\t<Togglable buttonLabel=\"sign up\" dataCy=\"signUp\" ref={signUpRef}>\r\n\t\t\t\t\t\t\t\t<SignUp />\r\n\t\t\t\t\t\t\t</Togglable>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Footer />\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsetUserFromLocalStorage\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App)\r\n","\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n\tuser: userReducer,\r\n\tusers: usersReducer,\r\n\tblogs: blogsReducer,\r\n\tnotification: notificationReducer\r\n})\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tcomposeWithDevTools(\r\n\t\tapplyMiddleware(thunk)\r\n\t)\r\n)\r\n\r\nexport default store","\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nconst render = () => {\r\n\tReactDOM.render(\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>,\r\n\t\tdocument.getElementById('root')\r\n\t)\r\n}\r\n\r\nrender()\r\nstore.subscribe(render)\r\n"],"sourceRoot":""}